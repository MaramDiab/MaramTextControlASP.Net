@using TXTextControl.Web
@using TXTextControl.Web.MVC
@using System.Text
@using MaramTX.Controllers


<div class="demo">

    @{
        Html.RenderPartial("~/Views/Partials/_partial_demo.cshtml");
    }
    
    <div class="tx-container">
        @Html.TXTextControl().TextControl(settings => {
        settings.Dock = DockStyle.Fill;
        }).Render()
    </div>

    <div id="backstage" class="backstage">
        <div class="menu">
            <a onclick="animateBackstage(1)"><img src="~/Images/back.png" /></a>
            <ul id="menu">
                <li><a id="New" onclick="newDocument()" href="#">New</a></li>
                <li><a id="Open" onclick="switchBackstageView('Open')">Open</a></li>
                <li><a id="View3" onclick="switchBackstageView('View3')">View 3</a></li>
                <li><a id="View4" onclick="switchBackstageView('View4')">View 3</a></li>
            </ul>
        </div>
        <div id="title" class="title"></div>
        <div id="stage" class="stage"></div>
    </div>

</div>

<script>

fileMenuRequired = true;

TXTextControl.addEventListener("ribbonTabsLoaded", function (e) {
    // remove the original file menu
    $("#fileMenu").remove();

    // open the new menu when the FILE menu is clicked
    $("#tabFile").on("click", function () {
        animateBackstage(0);
    });

    animateBackstage(1);
});

// fade in and out the backstage menu
function animateBackstage(direction) {
    if (direction == 1) {
        $("#backstage").css("left", "-" + $("#backstage").css("width"));
        $("#backstage").css("opacity", "0");
        $("#backstage").css("pointer-events", "none");
        switchBackstageView("Open");
    }
    else {
        $("#backstage").css("opacity", "1");
        $("#backstage").css("left", "0");
        $("#backstage").css("pointer-events", "all");
        switchBackstageView("Open");
    }
}

// switch the backstage view
function switchBackstageView(view) {
    $('#menu li a').each(function () {
        $(this).removeClass("active");
    });

    // add the title
    $("#title").html("<h1>" + view + "</h1>");
    $("#" + view).addClass("active");

    // load the partial view dynamically
    $("#stage").load("/tx/getview", { viewName: view });
}

function newDocument() {
    TXTextControl.resetContents();
    animateBackstage(1);
}

// load the document from the controller and load
// it into the TXTextControl.Web
function LoadDocumentBackstage(filename) {
    var serviceURL = "/TX/LoadDocument";

    $.ajax({
        type: "GET",
        url: serviceURL,
        data: {
            filename: filename
        },
        success: successFunc,
        error: errorFunc
    });

    function successFunc(data, status) {
        TXTextControl.loadDocument(TXTextControl.StreamType.InternalUnicodeFormat, data);
        animateBackstage(1);
    }

    function errorFunc() {
        alert("Error");
    }
}

</script>