@using TXTextControl.Web.MVC
@using TXTextControl.Web
@using System.Text
@using MaramTX.Controllers
@*this contain load document export them and contrl the permission to user*@

@Html.TXTextControl().TextControl(settings => {
	settings.WebSocketURL="wss://backend.textcontrol.com?access-token=h4CVCxoW9UANqceWL4qk";
       settings.UserNames = new string[] { "Paul" };//admin name
   settings.EditMode = EditMode.ReadOnly | EditMode.UsePassword;
}).Render()



<button id="btnSelect" class="btn mt-3 btn-success">Load Document</button>
<button onclick="ExportPDF()" class="btn mt-3 btn-success">Export PDF</button>
<button onclick="ExportWord()" class="btn mt-3 btn-success">Export word</button>
<button onclick="ExportExcel()" class="btn mt-3 btn-success">Export xlsx</button>
<button onclick="ExportPowerpoint()" class="btn mt-3 btn-success">Export ppt</button>
<button onclick="Permission" class="btn mt-3 btn-success">UserPermission</button>

<script src="~/js/jquery.js"></script>
<script>
    //permission section
    //This list of user names contains all users with active exceptions in
    //  the currently loaded document. The user is able to add additional users using the dialog box Add Users:
    function Permission() {
        //it is only possible to add existing users (including the newly added users) to the list:


        console.log("User");
        TXTextControl.ribbonPermissionsTab.registeredUserNames =
            ["user@textcontrol.com", "group1@textcontrol.com"];
        TXTextControl.ribbonPermissionsTab.allowAdditionalUserNames = false;
        var sel = TXTextControl.selection;

        sel.getStart(function (start) {
            sel.getLength(function (length) {
                TXTextControl.editableRegions.add("user@textcontrol.com", 1, start + 1, length);
            })
        })

        TXTextControl.editableRegions.forEach(function (er) {
            er.getUserName(function (username) { console.log(username); });
        });

    }
</script>




<script>
    //load document then export in any form
    var filename;

    $("#btnSelect").click(function () {

        var $input = $('<input type="file" />');
        $input.change(function () {
            var str = $(this).val().toString();
            var arr = str.split("\\");
            var len = arr.length;
            filename = arr[len - 1];
            //alert(filename);
            LoadDocument(filename);
        });
        $input.trigger('click');
    });
    var html = "This is some <b>HTML</b> text.";


    var encoded = btoa(html); // btoa base-64-encodes strings.
    var fileExt;

    var files = filename;

    function LoadDocument(filename) {

        var serviceURL = "@Url.Action("LoadDocument", "Home")";
        $.ajax({
            type: "GET",
            url: serviceURL,
            data: {
                filename: filename
            },
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data, status) {
            fileExt = filename.split('.').pop();

            if (fileExt == 'txt') {
                TXTextControl.loadDocument(TXTextControl.StreamType.PlainText, data);

            }
            else if (fileExt == 'docx') {
                TXTextControl.loadDocument(TXTextControl.StreamType.WordprocessingML, data);

            }
            else if (fileExt == 'html') {
                TXTextControl.loadDocument(TXTextControl.StreamType.HTMLFormat, data);

            }
            else if (fileExt == 'unicode') {
                TXTextControl.loadDocument(TXTextControl.StreamType.InternalUnicodeFormat, data);

            } else if (fileExt == 'doc') {
                TXTextControl.loadDocument(TXTextControl.StreamType.MSWord, data);

            }
            else if (fileExt == 'rtf') {
                TXTextControl.loadDocument(TXTextControl.StreamType.RichTextFormat, data);

            }
            else if (fileExt == 'pdf') {
                TXTextControl.loadDocument(TXTextControl.StreamType.AdobePDF, data);

            }
            else if (fileExt == 'xml') {
                TXTextControl.loadDocument(TXTextControl.StreamType.XMLFormat, data);

            }
            else if (fileExt == 'xlsx') {
                TXTextControl.loadDocument(TXTextControl.StreamType.SpreadsheetML, data);

            }
        }
        function errorFunc() {
            alert("Error");
        }



        function ExportPDF() {
            var name = filename.split(".");
            // save document
            TXTextControl.saveDocument(TXTextControl.StreamType.AdobePDF, function (e) {
                // create temporary link element
                var element = document.createElement('a');
                console.log("im here")
                element.setAttribute('href', 'data:application/octet-stream;base64,' + e.data);
                console.log("pdf");
                element.setAttribute('download', name[0] + ".pdf");

                element.style.display = 'none';
                document.body.appendChild(element);

                // simulate click
                element.click();

                // remove the link
                document.body.removeChild(element);
            });
        }


        function ExportWord() {
            var name = filename.split(".");
            // save document
            TXTextControl.saveDocument(TXTextControl.StreamType.AdobePDF, function (e) {
                // create temporary link element
                var element = document.createElement('a');
                element.setAttribute('href', 'data:application/octet-stream;base64,' + e.data);
                element.setAttribute('download', name[0] + ".docx");

                element.style.display = 'none';
                document.body.appendChild(element);

                // simulate click
                element.click();

                // remove the link
                document.body.removeChild(element);
            });
        }

        function ExportExcel() {
            var name = filename.split(".");
            // save document
            TXTextControl.saveDocument(TXTextControl.StreamType.AdobePDF, function (e) {
                // create temporary link element
                var element = document.createElement('a');
                element.setAttribute('href', 'data:application/octet-stream;base64,' + e.data);
                element.setAttribute('download', name[0] + ".xlsx");

                element.style.display = 'none';
                document.body.appendChild(element);

                // simulate click
                element.click();

                // remove the link
                document.body.removeChild(element);
            });
        }


        function ExportPowerpoint() {
            var name = filename.split(".");
            // save document
            TXTextControl.saveDocument(TXTextControl.StreamType.AdobePDF, function (e) {
                // create temporary link element
                var element = document.createElement('a');
                element.setAttribute('href', 'data:application/octet-stream;base64,' + e.data);
                element.setAttribute('download', name[0] + ".ppt");

                element.style.display = 'none';
                document.body.appendChild(element);

                // simulate click
                element.click();

                // remove the link
                document.body.removeChild(element);
            });
        }
</script>

